package com.buhov.family;

import com.buhov.family.PedigreeNode.PersonNode;
import com.buhov.family.FamilyData.FamilyData;
import com.buhov.family.FamilyData.FamilyDataException;
import com.buhov.family.FamilyHttpClient.Entities.Pedigree;
import com.buhov.family.FamilyHttpClient.Entities.PedigreeFull;
import com.buhov.family.FamilyHttpClient.Entities.Person;
import com.buhov.family.FamilyHttpClient.Entities.User;

import android.app.AlertDialog;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.Menu;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ListView;

public class PedigreeActivity extends BaseActivity {
	
	public static final String EXTRA_PEDIGREE_ID = "EXTRA_PEDIGREE_ID";
	public static final String EXTRA_PEDIGREE_TITLE = "EXTRA_PEDIGREE_TITLE";
	public static final String EXTRA_PEDIGREE_OWNERID = "EXTRA_PEDIGREE_OWNERID";
	
	public static final String STATE_KEY_TREE_MODE = "STATE_KEY_TREE_MODE";
	public static final String STATE_KEY_PERSON_ID = "STATE_KEY_PERSON_ID";

	private boolean treeMode = false;
	private int previousPersonIndex = 0;
	
	private Pedigree pedigreeFromIntent;
	private PedigreeFull pedigreeFull;
	private PedigreeNode pedigreeNode;
	
	private View progressView;
	private ListView peopleListView;
	private ArrayAdapter<Person> peopleAdapter;
	private FrameLayout pedigreeFrameLayout;
	private PedigreeView pedigreeView;
	
	private GetPedigreeTask getPedigreeTask;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		this.initPedigreeFromIntent();
		this.setTitle(this.pedigreeFromIntent.getTitle());
		setContentView(R.layout.activity_pedigree);
		this.progressView = findViewById(R.id.progress_pedigree);
		this.peopleListView = (ListView) findViewById(R.id.people_list);
		this.peopleListView.setOnItemClickListener(new PersonItemClickListener());
		this.pedigreeFrameLayout = (FrameLayout)findViewById(R.id.pedigree_tree);
		// Initializes the PedigreeView
		this.pedigreeView = new PedigreeView(this, null);
		this.pedigreeView.setAnonymousDisplayName(getResources().getString(R.string.anonymous_display_name));
		this.pedigreeView.setNoPeopleMessage(getResources().getString(R.string.no_people_message));
		this.pedigreeFrameLayout.addView(this.pedigreeView);
		if (savedInstanceState != null) {
			boolean startTreeMode = savedInstanceState.getBoolean(STATE_KEY_TREE_MODE, false);
			this.previousPersonIndex = savedInstanceState.getInt(STATE_KEY_PERSON_ID, 0);
			if(startTreeMode) {
				this.startTreeMode();
			}
	    }
	}
	
	@Override
    protected void onResume() {
    	super.onResume();
    	// Loading the pedigrees
        this.attemptGetPedigree(false);
    }
	
	private void initPedigreeFromIntent() {
		int id = getIntent().getExtras().getInt(EXTRA_PEDIGREE_ID);
		String title = getIntent().getExtras().getString(EXTRA_PEDIGREE_TITLE);
		int ownerId = getIntent().getExtras().getInt(EXTRA_PEDIGREE_OWNERID);
		this.pedigreeFromIntent = new Pedigree(id, title, ownerId);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.pedigree, menu);
		return true;
	}

	@Override
	protected void onSaveInstanceState (Bundle outState) {
	    super.onSaveInstanceState(outState);
	    if(this.treeMode) {
		    outState.putBoolean(STATE_KEY_TREE_MODE, this.treeMode);
		    outState.putInt(STATE_KEY_PERSON_ID, this.pedigreeView.getPersonId());
	    }
	}
	
	private void refreshActivity() {
		this.pedigreeNode = new PedigreeNode(this.pedigreeFull);
		this.setTitle(pedigreeFull.getTitle());
		this.refreshList();
		if(this.treeMode) {
			this.refreshTree();
		}
	}
	
	private void refreshList() {
		this.peopleAdapter = new ArrayAdapter<Person>(this, android.R.layout.simple_list_item_1, 
				android.R.id.text1, this.pedigreeFull.getPeople());
		this.peopleListView.setAdapter(this.peopleAdapter);
	}
	
	private void refreshTree() {
		int currentViewId = (this.pedigreeView.hasPersonNode()) ? this.pedigreeView.getPersonId() : this.previousPersonIndex;
		PersonNode person = this.pedigreeNode.getPerson(currentViewId);
		this.pedigreeView.setPersonNode(person);
	}
	
	private void startTreeModeWith(PersonNode person) {
		this.pedigreeView.setPersonNode(person);
		this.startTreeMode();
	}
	
	private void startTreeMode() {
		this.toggleView(true, this.pedigreeFrameLayout, this.peopleListView);
		this.treeMode = true;
	}
	
	private void attemptGetPedigree(boolean obligatoryServerUpdate) {
		if (this.getPedigreeTask != null) {
			return;
		}
    	
    	if(this.app.getLoginManager().hasLoggedUser()) {
        	PedigreeActivity.this.toggleView(true, progressView, pedigreeFrameLayout);
        	this.getPedigreeTask = new GetPedigreeTask(this.pedigreeFromIntent.getId(), obligatoryServerUpdate);
        	this.getPedigreeTask.execute(this.app.getLoginManager().getLoggedUser());
        }
	}
	
	private class GetPedigreeTask extends AsyncTask<User, Void, Boolean> {
		
    	private boolean obligatoryServerUpdate;
		private String error;
		private int pedigreeId;
		
		public GetPedigreeTask(int pedigreeId, boolean obligatoryServerUpdate) {
			this.pedigreeId = pedigreeId;
			this.obligatoryServerUpdate = obligatoryServerUpdate;
		}
		
		@Override
		protected Boolean doInBackground(User... params) {
			try {
				FamilyData data = PedigreeActivity.this.app.getFamilyData();
				PedigreeActivity.this.pedigreeFull = data.getPedigree(params[0], this.pedigreeId, this.obligatoryServerUpdate);
				return true;
			}
			catch(FamilyDataException e) {
				this.error = e.getMessage();
				return false;
			}
		}

		@Override
		protected void onPostExecute(final Boolean success) {
			getPedigreeTask = null;

			if (success) {
				PedigreeActivity.this.refreshActivity();
			}
			else {
				String title = getResources().getString(R.string.alert_title_loading_data_failed);
				String message = this.error;
				int icon = R.drawable.ic_error;
				AlertDialog dialog = PedigreeActivity.this.getAlert(PedigreeActivity.this, message, title, icon);
				dialog.show();
			}
			
			PedigreeActivity.this.toggleView(false, progressView, pedigreeFrameLayout);
		}

		@Override
		protected void onCancelled() {
			getPedigreeTask = null;
			PedigreeActivity.this.toggleView(false, progressView, pedigreeFrameLayout);
		}
	}

	private class PersonItemClickListener implements AdapterView.OnItemClickListener {

		@Override
		public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
			Person person = (Person)peopleListView.getItemAtPosition(position);
			startTreeMode(pedigreeNode.getPerson(person.getId()));
		}
    }
}
