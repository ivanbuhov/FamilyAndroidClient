package com.buhov.family;

import com.buhov.family.FamilyHttpClient.FamilyHttpClient;
import com.buhov.family.FamilyHttpClient.FamilyServiceException;
import com.buhov.family.FamilyHttpClient.Entities.*;

import android.os.AsyncTask;
import android.os.Bundle;
import android.app.AlertDialog;
import android.view.*;
import android.widget.*;

public class MyPedigreesActivity extends BaseActivity {

	private GetMyPedigreesTask myPedigreesTask = null;
	private View contentView;
	private View progressView;
	
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_my_pedigrees);
        this.progressView = findViewById(R.id.progress_my_pedigrees);
        this.contentView = findViewById(R.id.content_my_pedigrees);
        
        // Getting the pedigrees
        this.attemptGetMyPedigrees();
    }

    public void attemptGetMyPedigrees() {
    	MyPedigreesActivity.this.showProgress(true, contentView, progressView);
    	UserDTO currentUser = ((FamilyApplication)getApplication()).getCurrentUser();
    	this.myPedigreesTask = new GetMyPedigreesTask();
    	this.myPedigreesTask.execute(currentUser);
    }
    
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
    	super.onCreateOptionsMenu(menu);
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.my_pedigrees, menu);
        return true;
    }
    
    // Represents an asynchronous registration task used to register a user in the system.
 	public class GetMyPedigreesTask extends AsyncTask<UserDTO, Void, Boolean> {
 		
 		private FamilyApplication application = (FamilyApplication)getApplication();
 		private Pedigree[] pedigrees;
 		private String error;
 		
 		@Override
 		protected Boolean doInBackground(UserDTO... params) {
 			try {
 				FamilyData client = this.application.getFamilyData();
 				this.pedigrees = client.GetPedigrees(params[0]);
 				return true;
 			}
 			catch(FamilyServiceException e) {
 				this.error = e.getMessage();
 				return false;
 			}
 		}

 		@Override
 		protected void onPostExecute(final Boolean success) {
 			myPedigreesTask = null;
 			MyPedigreesActivity.this.showProgress(false, contentView, progressView);

 			if (success) {
 				((TextView)findViewById(R.id.status)).setText("Ready!");
 			} else {
 				String title = getResources().getString(R.string.alrt_title_loading_data_failed);
 				String message = this.error;
 				int icon = R.drawable.ic_error;
 				AlertDialog dialog = MyPedigreesActivity.this.getAlert(MyPedigreesActivity.this, message, title, icon);
 				dialog.show();
 			}
 		}

 		@Override
 		protected void onCancelled() {
 			myPedigreesTask = null;
 			MyPedigreesActivity.this.showProgress(false, contentView, progressView);
 		}
 	}
    
}
